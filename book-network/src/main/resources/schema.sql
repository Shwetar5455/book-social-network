-- Drop tables if they exist (in correct order due to foreign key constraints)
DROP TABLE IF EXISTS _user_roles CASCADE;
DROP TABLE IF EXISTS role CASCADE;
DROP TABLE IF EXISTS token CASCADE;
DROP TABLE IF EXISTS feedback CASCADE;
DROP TABLE IF EXISTS book_transaction_history CASCADE;
DROP TABLE IF EXISTS book CASCADE;
DROP TABLE IF EXISTS _user CASCADE;


-- Create tables based on your entities
CREATE TABLE _user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    firstname VARCHAR(255),
    lastname VARCHAR(255),
    date_of_birth DATE,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255),
    account_locked BOOLEAN DEFAULT FALSE,
    enabled BOOLEAN DEFAULT TRUE,
    created_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    created_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE _user_roles (
    user_id INT,
    roles_id INT,
    PRIMARY KEY (user_id, roles_id),
    FOREIGN KEY (user_id) REFERENCES _user(id),
    FOREIGN KEY (roles_id) REFERENCES role(id)
);

CREATE TABLE token (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    token VARCHAR(255) UNIQUE NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    validated_at TIMESTAMP,
    userId INT NOT NULL,
    FOREIGN KEY (userId) REFERENCES _user(id)
);

CREATE TABLE book(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255),
    author_name VARCHAR(255),
    isbn VARCHAR(255),
    synopsis TEXT,
    book_cover VARCHAR(255),
    archived BOOLEAN DEFAULT FALSE,
    shareable BOOLEAN DEFAULT TRUE,
    owner_id INT,
    created_date TIMESTAMP NOT NULL,
    last_modified_date TIMESTAMP,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255),
    FOREIGN KEY (owner_id) REFERENCES _user(id)
);

CREATE TABLE book_transaction_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id VARCHAR(255),
    book_id INT NOT NULL,
    returned BOOLEAN DEFAULT FALSE,
    return_approved BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (book_id) REFERENCES book(id),
    created_date TIMESTAMP NOT NULL,
    last_modified_date TIMESTAMP,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255)
);

CREATE TABLE feedback (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    note DOUBLE PRECISION,
    comment TEXT,
    book_id INT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    last_modified_date TIMESTAMP,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255),
    FOREIGN KEY (book_id) REFERENCES book(id)
);




